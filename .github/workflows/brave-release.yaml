name: Create Draft Release for Brave-Based Browsertrix Browser Base and Publish Latest
on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build x86 and ARM Images and push to Dockerhub
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v3
        with:
          lfs: true
      -
        name: Read brave-version.txt
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./brave-version.txt
      -
        name: Set env var with brave-version
        id: set-browser-version
        run: echo "BRAVE_VERSION=${{ steps.package.outputs.content }}" >> $GITHUB_ENV
      -
        name: Create draft release on GitHub if doesn't exist
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          tag: brave-${{ env.BRAVE_VERSION }}
          body: "This release publishes the image: `webrecorder/browsertrix-browser-base:brave-${{ env.BRAVE_VERSION }}`\n\nThe image is hosted [on DockerHub](https://hub.docker.com/r/webrecorder/browsertrix-browser-base/tags?name=brave-${{ env.BRAVE_VERSION }})"
      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=webrecorder/browsertrix-browser-base
          TAGS="${DOCKER_IMAGE}:brave-latest"
          echo ::set-output name=tags::${TAGS}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: brave
          build-args: |
            BROWSER=brave
            BROWSER_VERSION=${{ env.BRAVE_VERSION }}
          tags: ${{ steps.prep.outputs.tags }}
          platforms: "linux/amd64"
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
